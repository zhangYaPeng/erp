<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration后面的status，OFF这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。 
	TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
<!-- monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数。 -->

<configuration status="OFF">
	<properties>
		<property name="LOG_HOME">/home/logs/erp</property>
		<property name="LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n</property>
	</properties>
	
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<PatternLayout pattern="${LOG_PATTERN}" />
		</Console>

		<!--root日志 所有日志输出 -->
		<RollingRandomAccessFile name="rootAppender" fileName="${LOG_HOME}/root.log"
								 filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/root-%d{yyyy-MM-dd}-%i.log">

			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--TimeBasedTriggeringPolicy 这个配置需要和filePattern结合使用，注意filePattern中配置的文件重命名规则是${FILE_NAME}-%d{yyyy-MM-dd
					HH-mm}-%i，最小的时间粒度是mm，即分钟，TimeBasedTriggeringPolicy指定的size是1，结合起来就是每1分钟生成一个新文件。如果改成%d{yyyy-MM-dd
					HH}，最小粒度为小时，则每一个小时生成一个文件。 -->
				<TimeBasedTriggeringPolicy interval="1" />
				<!--SizeBasedTriggeringPolicy 指定当文件体积大于size指定的值时，触发Rolling -->
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!--指定最多保存的文件个数 -->
			<DefaultRolloverStrategy max="10000" compressionLevel="9" />
		</RollingRandomAccessFile>

		<!--root日志 错误日志输出 -->
		<RollingRandomAccessFile name="errorAppender" fileName="${LOG_HOME}/error.log"
								 filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/error-%d{yyyy-MM-dd}-%i.log">

			<Filters>
				<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--TimeBasedTriggeringPolicy 这个配置需要和filePattern结合使用，注意filePattern中配置的文件重命名规则是${FILE_NAME}-%d{yyyy-MM-dd
					HH-mm}-%i，最小的时间粒度是mm，即分钟，TimeBasedTriggeringPolicy指定的size是1，结合起来就是每1分钟生成一个新文件。如果改成%d{yyyy-MM-dd
					HH}，最小粒度为小时，则每一个小时生成一个文件。 -->
				<TimeBasedTriggeringPolicy interval="1" />
				<!--SizeBasedTriggeringPolicy 指定当文件体积大于size指定的值时，触发Rolling -->
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!--指定最多保存的文件个数 -->
			<DefaultRolloverStrategy max="10000" compressionLevel="9" />
		</RollingRandomAccessFile>

	</appenders>
	<!--定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>

		<asyncRoot level="info" includeLocation="true">
			<appender-ref ref="rootAppender" />
			<appender-ref ref="errorAppender" />
		</asyncRoot>

	</loggers>
</configuration>